/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}template{display:none}[hidden]{display:none}

@import url('https://fonts.googleapis.com/css?family=Roboto:400,700,900&display=swap');
@import url('https://fonts.googleapis.com/css?family=Crimson+Text&display=swap');
@import url('https://fonts.googleapis.com/css?family=Oswald:200,300,400,500,600,700&display=swap');

@mixin newFont($fontName) {
	@font-face {
	    src: url('/fonts/$fontName/$fontName.eot');
	    src: url('/fonts/$fontName/$fontName.eot') format('embedded-opentype'),
	         url('/fonts/$fontName/$fontName.woff2') format('woff2'),
	         url('/fonts/$fontName/$fontName.woff') format('woff'),
	         url('/fonts/$fontName/$fontName.ttf') format('truetype'),
	         url('/fonts/$fontName/$fontName.svg#$fontName') format('svg');
	}
}

//================ ChronicleDisplay-Bold ================//
// @include newFont(ChronicleDisplay-Bold);



$opens: 'Open Sans', 'Roboto', 'Open Sans', Arial, "Helvetica Neue", Helvetica, sans-serif;
.opens{ font-family: $opens; }

$roboto: 'Roboto', 'Open Sans', Arial, "Helvetica Neue", Helvetica, sans-serif;
.roboto{ font-family: $roboto; }

$ubuntu: 'Ubuntu Condensed', 'Roboto', 'Open Sans', Arial, "Helvetica Neue", Helvetica, sans-serif;
.ubuntu{ font-family: $ubuntu; }

$crimson: 'Crimson Text', 'Roboto', 'Open Sans', Arial, "Helvetica Neue", Helvetica, sans-serif;
.crimson{ font-family: $crimson; }

$oswald: 'Oswald', sans-serif;
.oswald{ font-family: $oswald; }



$montserrat: 'Montserrat', sans-serif;
.montserrat{ font-family: $montserrat; }


$tall: 'Oswald','News Cycle', sans-serif;
.tall{ font-family: $tall; }


$roboto:'Roboto', sans-serif;
.roboto{ font-family: $roboto; }


$robotoCondensed:'Roboto Condensed', sans-serif;
.robotoCondensed{ font-family: $robotoCondensed;}


$gothic:'Gothic A1', sans-serif;
.gothic{ font-family: $gothic;}















